services:
  web:
    build:
      context: .
      dockerfile:  ./docker/django_server/Dockerfile
    command: bash -c "python manage.py migrate && echo yes | python manage.py collectstatic && uwsgi --socket 0.0.0.0:8001 --enable-threads --module democrapp_api.wsgi"
    ports:
     - "8001:8001"
    links:
      - redis:redis
      - database:database
    environment:
      DATABASE_PASSWORD: "${DATABASE_PASSWORD}"
      SECRET_KEY: "${SECRET_KEY}"
      DATABASE_USER: "${DATABASE_USER}"
      DATABASE_PORT: "${DATABASE_PORT}"
      DATABASE_NAME: "${DATABASE_NAME}"
    depends_on:
      redis:
        condition: service_started
      database:
        condition: service_healthy
    restart: always
    pull_policy: build
    volumes:
        - static_volume:/srv/static
    develop:
      watch:
        - action: sync
          path: ./democrapp-API
          target: /srv/api
          ignore:
            - node_modules/
        - action: rebuild
          path: ./docker/django_server/settings.py
        - action: rebuild
          path: ./democrapp-API/requirements.txt
  websocket:
    build:
      context: .
      dockerfile:  ./docker/django_server/Dockerfile
    command: bash -c "daphne -b 0.0.0.0 -p 8002 democrapp_api.asgi:application;"
    ports:
     - "8002:8002"
    links:
      - redis:redis
      - database:database
    environment:
      DATABASE_PASSWORD: "${DATABASE_PASSWORD}"
      SECRET_KEY: "${SECRET_KEY}"
      DATABASE_USER: "${DATABASE_USER}"
      DATABASE_PORT: "${DATABASE_PORT}"
      DATABASE_NAME: "${DATABASE_NAME}"
    depends_on:
      web:
        condition: service_started
      redis:
        condition: service_started
      database:
        condition: service_healthy
    restart: always
    pull_policy: build
    develop:
      watch:
        - action: sync
          path: ./democrapp-API
          target: /srv/api
          ignore:
            - node_modules/
        - action: rebuild
          path: ./docker/django_server/settings.py
        - action: rebuild
          path: ./democrapp-API/requirements.txt
  redis:
    image: "redis:alpine"
    restart: always  
    volumes:
        - redis_data:/data
  nginx:
    build:
      context: .
      dockerfile:  ./docker/nginx/Dockerfile
    ports:
     - "80:80"
    restart: always
    pull_policy: build
    volumes:
        - static_volume:/srv/api/static
    depends_on:
      web:
        condition: service_started
      websocket:
        condition: service_started
    develop:
      watch:
        - action: sync
          path: ./democrapp-ui
          target: /usr/share/nginx/html
          ignore:
            - ./democrapp-ui/node_modules/
        - action: rebuild
          path: ./democrapp-ui/package.json
  database:
    image: "mysql:8.3"
    environment:
      MYSQL_ROOT_PASSWORD: "${DATABASE_PASSWORD}"
      MYSQL_DATABASE: "${DATABASE_NAME}"
      MYSQL_USER: "${DATABASE_USER}"
      MYSQL_PASSWORD: "${DATABASE_PASSWORD}"
      MYSQL_TCP_PORT: "${DATABASE_PORT}"
    volumes:
      - mysql_data:/var/lib/mysql
    restart: always
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "--silent"]
      interval: 5s
      timeout: 10s
      retries: 20
volumes:
    mysql_data:
    static_volume:
    redis_data:
